import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable QtQuick.Extras 2.0'

Module {
    dependencies: [
        "QtQuick 2.6",
        "QtQuick.Controls 2.0",
        "QtQuick.Window 2.2"
    ]
    Component {
        name: "QQuickDrawer"
        defaultProperty: "contentItem"
        prototype: "QQuickControl"
        exports: ["QtQuick.Extras/AbstractDrawer 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "edge"; type: "Qt::Edge" }
        Property { name: "position"; type: "double" }
        Property { name: "contentItem"; type: "QQuickItem"; isPointer: true }
        Property { name: "animation"; type: "QQuickPropertyAnimation"; isPointer: true }
        Signal { name: "clicked" }
        Method { name: "open" }
        Method { name: "close" }
    }
    Component {
        name: "QQuickSwipeView"
        defaultProperty: "contentData"
        prototype: "QQuickContainer"
        exports: ["QtQuick.Extras/AbstractSwipeView 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "currentIndex"; type: "int" }
        Property { name: "model"; type: "QVariant"; isReadonly: true }
        Property { name: "contentData"; type: "QObject"; isList: true; isReadonly: true }
        Method {
            name: "setCurrentIndex"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "itemAt"
            type: "QQuickItem*"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "addItem"
            Parameter { name: "item"; type: "QQuickItem"; isPointer: true }
        }
        Method {
            name: "insertItem"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "item"; type: "QQuickItem"; isPointer: true }
        }
        Method {
            name: "moveItem"
            Parameter { name: "from"; type: "int" }
            Parameter { name: "to"; type: "int" }
        }
        Method {
            name: "removeItem"
            Parameter { name: "index"; type: "int" }
        }
    }
}
