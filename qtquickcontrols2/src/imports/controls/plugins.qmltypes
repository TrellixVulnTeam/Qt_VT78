import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable QtQuick.Controls 2.0'

Module {
    dependencies: ["QtQuick 2.6", "QtQuick.Window 2.2"]
    Component {
        name: "QQuickApplicationWindow"
        defaultProperty: "data"
        prototype: "QQuickWindowQmlImpl"
        exports: ["QtQuick.Controls/AbstractApplicationWindow 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "header"; type: "QQuickItem"; isPointer: true }
        Property { name: "footer"; type: "QQuickItem"; isPointer: true }
        Property { name: "contentWidth"; type: "double" }
        Property { name: "contentHeight"; type: "double" }
    }
    Component {
        name: "QQuickBusyIndicator"
        defaultProperty: "data"
        prototype: "QQuickControl"
        exports: ["QtQuick.Controls/AbstractBusyIndicator 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "running"; type: "bool" }
        Property { name: "indicator"; type: "QQuickItem"; isPointer: true }
    }
    Component {
        name: "QQuickButton"
        defaultProperty: "data"
        prototype: "QQuickControl"
        exports: ["QtQuick.Controls/AbstractButton 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "text"; type: "string" }
        Property { name: "pressed"; type: "bool" }
        Property { name: "label"; type: "QQuickItem"; isPointer: true }
        Signal { name: "pressed" }
        Signal { name: "released" }
        Signal { name: "canceled" }
        Signal { name: "clicked" }
    }
    Component {
        name: "QQuickCheckBox"
        defaultProperty: "data"
        prototype: "QQuickCheckable"
        exports: ["QtQuick.Controls/AbstractCheckBox 2.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "QQuickCheckable"
        defaultProperty: "data"
        prototype: "QQuickButton"
        Property { name: "checked"; type: "bool" }
        Property { name: "indicator"; type: "QQuickItem"; isPointer: true }
        Method { name: "toggle" }
    }
    Component { name: "QQuickContainer"; defaultProperty: "data"; prototype: "QQuickControl" }
    Component {
        name: "QQuickControl"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["QtQuick.Controls/Control 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "contentWidth"; type: "double"; isReadonly: true }
        Property { name: "contentHeight"; type: "double"; isReadonly: true }
        Property { name: "padding"; type: "double" }
        Property { name: "topPadding"; type: "double" }
        Property { name: "leftPadding"; type: "double" }
        Property { name: "rightPadding"; type: "double" }
        Property { name: "bottomPadding"; type: "double" }
        Property { name: "layoutDirection"; type: "Qt::LayoutDirection" }
        Property { name: "effectiveLayoutDirection"; type: "Qt::LayoutDirection"; isReadonly: true }
        Property { name: "mirrored"; type: "bool"; isReadonly: true }
        Property { name: "background"; type: "QQuickItem"; isPointer: true }
        Property { name: "contentItem"; type: "QQuickItem"; isPointer: true }
    }
    Component {
        name: "QQuickExclusiveAttached"
        prototype: "QObject"
        exports: ["QtQuick.Controls/Exclusive 2.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "group"; type: "QQuickExclusiveGroup"; isPointer: true }
    }
    Component {
        name: "QQuickExclusiveGroup"
        prototype: "QObject"
        exports: ["QtQuick.Controls/ExclusiveGroup 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "current"; type: "QObject"; isPointer: true }
        Method {
            name: "addCheckable"
            Parameter { name: "object"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "removeCheckable"
            Parameter { name: "object"; type: "QObject"; isPointer: true }
        }
    }
    Component {
        name: "QQuickFrame"
        defaultProperty: "data"
        prototype: "QQuickContainer"
        exports: ["QtQuick.Controls/AbstractFrame 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "frame"; type: "QQuickItem"; isPointer: true }
    }
    Component {
        name: "QQuickGroupBox"
        defaultProperty: "data"
        prototype: "QQuickFrame"
        exports: ["QtQuick.Controls/AbstractGroupBox 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "title"; type: "string" }
        Property { name: "label"; type: "QQuickItem"; isPointer: true }
    }
    Component {
        name: "QQuickLabel"
        defaultProperty: "data"
        prototype: "QQuickText"
        exports: ["QtQuick.Controls/AbstractLabel 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "background"; type: "QQuickItem"; isPointer: true }
    }
    Component {
        name: "QQuickPageIndicator"
        defaultProperty: "data"
        prototype: "QQuickControl"
        exports: ["QtQuick.Controls/AbstractPageIndicator 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "count"; type: "int" }
        Property { name: "currentIndex"; type: "int" }
    }
    Component {
        name: "QQuickProgressBar"
        defaultProperty: "data"
        prototype: "QQuickControl"
        exports: ["QtQuick.Controls/AbstractProgressBar 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "from"; type: "double" }
        Property { name: "to"; type: "double" }
        Property { name: "value"; type: "double" }
        Property { name: "position"; type: "double"; isReadonly: true }
        Property { name: "visualPosition"; type: "double"; isReadonly: true }
        Property { name: "indeterminate"; type: "bool" }
        Property { name: "indicator"; type: "QQuickItem"; isPointer: true }
    }
    Component {
        name: "QQuickRadioButton"
        defaultProperty: "data"
        prototype: "QQuickCheckable"
        exports: ["QtQuick.Controls/AbstractRadioButton 2.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "QQuickScrollBar"
        defaultProperty: "data"
        prototype: "QQuickControl"
        exports: ["QtQuick.Controls/AbstractScrollBar 2.0"]
        exportMetaObjectRevisions: [0]
        attachedType: "QQuickScrollBarAttached"
        Property { name: "size"; type: "double" }
        Property { name: "position"; type: "double" }
        Property { name: "active"; type: "bool" }
        Property { name: "pressed"; type: "bool" }
        Property { name: "orientation"; type: "Qt::Orientation" }
        Property { name: "handle"; type: "QQuickItem"; isPointer: true }
        Method {
            name: "setSize"
            Parameter { name: "size"; type: "double" }
        }
        Method {
            name: "setPosition"
            Parameter { name: "position"; type: "double" }
        }
    }
    Component {
        name: "QQuickScrollBarAttached"
        prototype: "QObject"
        Property { name: "horizontal"; type: "QQuickScrollBar"; isPointer: true }
        Property { name: "vertical"; type: "QQuickScrollBar"; isPointer: true }
    }
    Component {
        name: "QQuickScrollIndicator"
        defaultProperty: "data"
        prototype: "QQuickControl"
        exports: ["QtQuick.Controls/AbstractScrollIndicator 2.0"]
        exportMetaObjectRevisions: [0]
        attachedType: "QQuickScrollIndicatorAttached"
        Property { name: "size"; type: "double" }
        Property { name: "position"; type: "double" }
        Property { name: "active"; type: "bool" }
        Property { name: "orientation"; type: "Qt::Orientation" }
        Property { name: "indicator"; type: "QQuickItem"; isPointer: true }
        Method {
            name: "setSize"
            Parameter { name: "size"; type: "double" }
        }
        Method {
            name: "setPosition"
            Parameter { name: "position"; type: "double" }
        }
    }
    Component {
        name: "QQuickScrollIndicatorAttached"
        prototype: "QObject"
        Property { name: "horizontal"; type: "QQuickScrollIndicator"; isPointer: true }
        Property { name: "vertical"; type: "QQuickScrollIndicator"; isPointer: true }
    }
    Component {
        name: "QQuickSlider"
        defaultProperty: "data"
        prototype: "QQuickControl"
        exports: ["QtQuick.Controls/AbstractSlider 2.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "SnapMode"
            values: {
                "NoSnap": 0,
                "SnapAlways": 1,
                "SnapOnRelease": 2
            }
        }
        Property { name: "from"; type: "double" }
        Property { name: "to"; type: "double" }
        Property { name: "value"; type: "double" }
        Property { name: "position"; type: "double"; isReadonly: true }
        Property { name: "visualPosition"; type: "double"; isReadonly: true }
        Property { name: "stepSize"; type: "double" }
        Property { name: "snapMode"; type: "SnapMode" }
        Property { name: "pressed"; type: "bool" }
        Property { name: "orientation"; type: "Qt::Orientation" }
        Property { name: "handle"; type: "QQuickItem"; isPointer: true }
        Property { name: "track"; type: "QQuickItem"; isPointer: true }
        Method { name: "increase" }
        Method { name: "decrease" }
    }
    Component {
        name: "QQuickStackAttached"
        prototype: "QObject"
        exports: ["QtQuick.Controls/Stack 2.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "index"; type: "int"; isReadonly: true }
        Property { name: "status"; type: "QQuickStackView::Status"; isReadonly: true }
    }
    Component {
        name: "QQuickStackView"
        defaultProperty: "data"
        prototype: "QQuickControl"
        exports: ["QtQuick.Controls/AbstractStackView 2.0"]
        exportMetaObjectRevisions: [0]
        attachedType: "QQuickStackAttached"
        Enum {
            name: "Status"
            values: {
                "Inactive": 0,
                "Deactivating": 1,
                "Activating": 2,
                "Active": 3
            }
        }
        Enum {
            name: "LoadBehavior"
            values: {
                "DontLoad": 0,
                "ForceLoad": 1
            }
        }
        Enum {
            name: "Operation"
            values: {
                "Transition": 0,
                "Immediate": 1
            }
        }
        Property { name: "busy"; type: "bool"; isReadonly: true }
        Property { name: "depth"; type: "int"; isReadonly: true }
        Property { name: "currentItem"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "initialItem"; type: "QVariant" }
        Property { name: "popEnter"; type: "QQuickTransition"; isPointer: true }
        Property { name: "popExit"; type: "QQuickTransition"; isPointer: true }
        Property { name: "pushEnter"; type: "QQuickTransition"; isPointer: true }
        Property { name: "pushExit"; type: "QQuickTransition"; isPointer: true }
        Method { name: "clear" }
        Method {
            name: "get"
            type: "QQuickItem*"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "behavior"; type: "LoadBehavior" }
        }
        Method {
            name: "get"
            type: "QQuickItem*"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "find"
            type: "QQuickItem*"
            Parameter { name: "callback"; type: "QJSValue" }
            Parameter { name: "behavior"; type: "LoadBehavior" }
        }
        Method {
            name: "find"
            type: "QQuickItem*"
            Parameter { name: "callback"; type: "QJSValue" }
        }
        Method {
            name: "push"
            Parameter { name: "args"; type: "QQmlV4Function"; isPointer: true }
        }
        Method {
            name: "pop"
            Parameter { name: "args"; type: "QQmlV4Function"; isPointer: true }
        }
        Method {
            name: "replace"
            Parameter { name: "args"; type: "QQmlV4Function"; isPointer: true }
        }
    }
    Component {
        name: "QQuickSwitch"
        defaultProperty: "data"
        prototype: "QQuickCheckable"
        exports: ["QtQuick.Controls/AbstractSwitch 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "position"; type: "double" }
        Property { name: "visualPosition"; type: "double"; isReadonly: true }
    }
    Component {
        name: "QQuickTabBar"
        defaultProperty: "contentData"
        prototype: "QQuickContainer"
        exports: ["QtQuick.Controls/AbstractTabBar 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "currentIndex"; type: "int" }
        Property { name: "currentItem"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "contentModel"; type: "QVariant"; isReadonly: true }
        Property { name: "contentData"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "contentChildren"; type: "QQuickItem"; isList: true; isReadonly: true }
        Method {
            name: "setCurrentIndex"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "itemAt"
            type: "QQuickItem*"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "addItem"
            Parameter { name: "item"; type: "QQuickItem"; isPointer: true }
        }
        Method {
            name: "insertItem"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "item"; type: "QQuickItem"; isPointer: true }
        }
        Method {
            name: "moveItem"
            Parameter { name: "from"; type: "int" }
            Parameter { name: "to"; type: "int" }
        }
        Method {
            name: "removeItem"
            Parameter { name: "index"; type: "int" }
        }
    }
    Component {
        name: "QQuickTabButton"
        defaultProperty: "data"
        prototype: "QQuickCheckable"
        exports: ["QtQuick.Controls/AbstractTabButton 2.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "QQuickTextArea"
        defaultProperty: "data"
        prototype: "QQuickTextEdit"
        exports: ["QtQuick.Controls/AbstractTextArea 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "background"; type: "QQuickItem"; isPointer: true }
        Property { name: "placeholder"; type: "QQuickText"; isPointer: true }
    }
    Component {
        name: "QQuickTextField"
        defaultProperty: "data"
        prototype: "QQuickTextInput"
        exports: ["QtQuick.Controls/AbstractTextField 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "background"; type: "QQuickItem"; isPointer: true }
        Property { name: "placeholder"; type: "QQuickText"; isPointer: true }
    }
    Component {
        name: "QQuickThemeAttached"
        prototype: "QObject"
        exports: ["QtQuick.Controls/Theme 2.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "accentColor"; type: "QColor" }
        Property { name: "backgroundColor"; type: "QColor" }
        Property { name: "baseColor"; type: "QColor" }
        Property { name: "disabledColor"; type: "QColor" }
        Property { name: "focusColor"; type: "QColor" }
        Property { name: "frameColor"; type: "QColor" }
        Property { name: "pressColor"; type: "QColor" }
        Property { name: "selectedTextColor"; type: "QColor" }
        Property { name: "selectionColor"; type: "QColor" }
        Property { name: "shadowColor"; type: "QColor" }
        Property { name: "textColor"; type: "QColor" }
        Property { name: "padding"; type: "double" }
        Property { name: "roundness"; type: "double" }
        Property { name: "spacing"; type: "double" }
        Property { name: "disabledOpacity"; type: "double" }
    }
    Component {
        name: "QQuickToggleButton"
        defaultProperty: "data"
        prototype: "QQuickSwitch"
        exports: ["QtQuick.Controls/AbstractToggleButton 2.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "QQuickToolBar"
        defaultProperty: "data"
        prototype: "QQuickContainer"
        exports: ["QtQuick.Controls/AbstractToolBar 2.0"]
        exportMetaObjectRevisions: [0]
    }
}
